#!/bin/bash

#global variables
PATH_TRUNK=~/maquis2012/src/
BOOST_BINDINGS_INCLUDE=/project/h07/ALPS_INTEL_EIGER/include/
ALPS_DIR=/project/h07/ALPS_INTEL_EIGER/share/alps/

export BOOST_ROOT=/apps/eiger/boost_1_46_1/
export CC=icc
export CXX=icpc

#local variables
#targer directory
AMBIENT=ambient/
DMRG=dmrg/
TYPES=types/

#compiler and boost
COMPILER=iccxe/
COMPILER_NAME=intel
VERSION_COMPILER=2011

BOOST=boost/
VERSION_BOOST=1.46.1

#intel MPI
#WRAPPER_INTEL_MPI=impi/
#VERSION_WRAPPER_INTEL_MPI=4.0
#mvapich2 
WRAPPER_MVAPICH2_MPI=mvapich2/
VERSION_WRAPPER_MVAPICH2_MPI=1.7-intel
#openmpi
#WRAPPER_OPENMPI_MPI=openmpi/
#VERSION_WRAPPER_OPENMPI_MPI=1.5.3-intel

#condfig_file
EIGER_INTEL='eiger_intel.cmake'
EIGER_MKL='eiger_mkl.cmake'

print_construction_init(){
    echo " ----------------------- "
    echo " construction cmake      "
    echo " ${COMPILER} ${WRAPPER}  "
    echo " ----------------------- "
}

print_construction_over(){
    echo " ----------------------- "
    echo " construction cmake done "
    echo " ${COMPILER} ${WRAPPER}  "
    echo " ----------------------- "
}

create_directory(){
    for i in ${AMBIENT} ${DMRG} ${TYPES}
    do
        cd ${PATH_TRUNK}${i}
        mkdir build_${COMPILER_NAME}_${WRAPPER}
    done
}

create_ambient(){
    cd ${PATH_TRUNK}${AMBIENT}build_${COMPILER_NAME}_${WRAPPER}

    cmake -DMACHINE_CONFIG=${PATH_TRUNK}${DMRG}config_machines/${MACHINE_CONFIG} ..
}

create_dmrg(){
    cd ${PATH_TRUNK}${DMRG}build_${COMPILER_NAME}_${WRAPPER}
    cmake -DMACHINE_CONFIG=${PATH_TRUNK}${DMRG}config_machines/${MACHINE_CONFIG} -DALPS_DIR=${ALPS_DIR} -DBUILD_REGRESSION=ON -DBUILD_AMBIENT=ON -DUSE_AMBIENT=ON .. 
}

create_types(){
    cd ${PATH_TRUNK}${TYPES}build_${COMPILER_NAME}_${WRAPPER}
    create_dashboards
    cmake -DMACHINE_CONFIG=${PATH_TRUNK}${DMRG}config_machines/${MACHINE_CONFIG} -DBOOST_BINDINGS_INCLUDE=${BOOST_BINDINGS_INCLUDE} -DENABLE_PARALLEL=ON -DENABLE_TESTS=ON -DBUILD_AMBIENT=ON ..
}

create_dashboards(){
    mkdir Dashboards
    echo "set(PREDEFINED_CTEST_SITE \"`uname -n`\")"                                                         >  ./Dashboards/site.cmake
    echo "set(PREDEFINED_CTEST_BUILD_NAME \"${COMPILER_NAME}_${WRAPPER%/}\")"                                >> ./Dashboards/site.cmake
    echo "set(PREDEFINED_CTEST_SOURCE_DIRECTORY \"${PATH_TRUNK}${TYPES}\")"                                  >> ./Dashboards/site.cmake
    echo "set(PREDEFINED_CTEST_BINARY_DIRECTORY \"${PATH_TRUNK}${TYPES}build_${COMPILER_NAME}_${WRAPPER}\")" >> ./Dashboards/site.cmake
    cat ../Dashboards/site.cmake >> ./Dashboards/site.cmake
    cp ../Dashboards/cmake_common.cmake ./Dashboards/
}

compil(){
    cd ${PATH_TRUNK}${TYPES}build_${COMPILER_NAME}_${WRAPPER}
}

create_distrib(){
    print_construction_init
    create_directory 
    create_ambient
    create_dmrg
    create_types
    print_construction_over
}

#module load ${COMPILER}${VERSION_COMPILER} ${BOOST}${VERSION_BOOST} ${WRAPPER_INTEL_MPI}${VERSION_WRAPPER_INTEL_MPI} 
#WRAPPER=${WRAPPER_INTEL_MPI}
#MACHINE_CONFIG=${EIGER_INTEL}
#create_distrib

module remove  ${WRAPPER_INTEL_MPI}${VERSION_WRAPPER_INTEL_MPI} 
module load  ${BOOST}${VERSION_BOOST} ${WRAPPER_MVAPICH2_MPI}${VERSION_WRAPPER_MVAPICH2_MPI} 
WRAPPER=${WRAPPER_MVAPICH2_MPI}
MACHINE_CONFIG=${EIGER_MKL}
create_distrib

#module remove  ${WRAPPER_MVAPICH2_MPI}${VERSION_WRAPPER_MVAPICH2_MPI} 
#module load  ${BOOST}${VERSION_BOOST} ${WRAPPER_OPENMPI_MPI}${VERSION_WRAPPER_OPENMPI_MPI} 
#WRAPPER=${WRAPPER_OPENMPI_MPI}
#MACHINE_CONFIG=${EIGER_MKL}
#create_distrib
