
/*!
  \mainpage Very large integer notice
 
  \section introduction_sec Introduction

  The main purpose of the  Very Large Integer (VLI/C++) library is to perform large integer arithmetic, basic polynomial operations and  inner products of polynomials. 
  Based on meta-programming of assembly language,  and  hybrid (CPU/GPU) mode, it performs inner products of dense and triangular polynomials  of 1 to 4 variables 
  where the coefficients are represented  by large integers of 128 to 512 bits. 
 
  \section install_sec Installation
 
  \subsection step1 What do you need ?
  
  With 10 000 lines of assembly the library is limited to X86 and Power64 system. The library has been successfully tested on various system AMD64 (Bulldozer, Istanbul), 
  X86-64 (Sandy-Bridge, Westmere) and power system (Power6, BGQ), so it should work on your system. Nevertheless, for the optimum performance, you need :

   -# x86-64 or Power64 architecture
   -# a c++ compiler supporting GCC ASM inline mode (GCC, ICC, XLC)
   -# boost library include and library for the tests (Min 1.48)
   -# CUDA GPU Kepler or Fermi with CUDA SDK (nvcc ...) 
   -# Doxygen to generate the doc
   -# GMP to test
   -# cmake to generate makefile

If you have a exotic system (e.g. Raspberry PI), it exists a non ASM mode with poor performance.

  \subsection step2 How do I install ?
  
The makefile is generated with cmake, if your environment is correctly set up do : 

   -# mkdir build
   -# cd build 
   -# cmake ..

When all the cake architecture is performed, you can open the cmake option and plug the GPU, setup install path, regression tests and so on. 
You can now compile the library and install it.

   -# make
   -# make install 

  \subsection step2 How do I compile ?

As usual program, you will path to the include and  


The code needs the include path of the library VLI and boost, and a link to the library VLI : 

\code
    g++ -I/PATH_INCLUDE_BOOST -I/PATH_INCLUDE_VLI my_programm.cpp -L/PATH_LIBRARY_VLI -lvli
\endcode


 */
