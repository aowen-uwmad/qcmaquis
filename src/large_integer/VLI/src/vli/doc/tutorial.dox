/**
\page tutorial Tutorial 1, make a basic program

The first tutorial shows how perform a basic addition between two VLI number.
Firstly write a basic program

\code
#include <iostream>
#include "vli.hpp"

int main(int argc, char * argv[]){
    vli<128> a(2),b(3); // I create two VLI numbers of 128 bits 
    a+=b; // I make the sum
    std::cout << a << std::endl; // I print under decimal form
    std::cout << std::hex << a << std::endl; // I print under hexadecinal form
}
\endcode

The code should be compiled like :

\code
    g++ -I/PATH_INCLUDE_VLI main.cpp -L/PATH_LIBRARY_VLI -lvli
\endcode

The output will be : 

\code
   5 // for the decimal form 
   0 5 // for the hexadecimal form, by default the hexadecimal prints all entries of the VLI number
\endcode

This example is not very significative, considering now the following initialization of the number a and b: 

\code
    vli<128> a(0xffffffffffffffff),b(3); // The first entry of a is full bit 
}
\endcode

The print show the propagation of the carry bit.

\code
   18 446 744 073 709 551 618 // for the decimal form 
   1 2 // for the hexadecimal form, by default the hexadecimal prints all entries of the VLI number
\endcode

*/
