#!/bin/bash -l
STATE="void"
STATE_AMBIENT="void"
STATE_DMRG="void"
# end of target states #
SHARED_FS=true
PREFIX=ambient
COMPILER=intel
COMPILER_VERSION=2013
MPI_WRAPPER=openmpi
MPI_WRAPPER_VERSION=1.7.1-intel

export CC=mpicc
export CXX=mpicxx
export BOOST_ROOT=/project/h07/BOOST_1_53/

module load gcc/4.7.2
module load ${COMPILER}/${COMPILER_VERSION}
module load ${MPI_WRAPPER}/${MPI_WRAPPER_VERSION}
module load cmake

## common ##
COMMON_CMAKE_CXX_FLAGS="-O3 -DNDEBUG -w -Wfatal-errors"
COMMON_CMAKE_C_COMPILER=mpicc
COMMON_CMAKE_CXX_COMPILER=mpicxx
COMMON_MPI_CXX_FOUND=TRUE
COMMON_AMBIENT_THREADING="openmp"
COMMON_BLAS_LAPACK_SELECTOR="manual" # TODO: mkl_sequential should work as well
COMMON_MAQUISLapack_LIBRARIES="-lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_lapack95_lp64 -lpthread"
COMMON_MAQUISLapack_LIB_DIRS=/apps/castor/intel/mkl/lib/intel64
COMMON_MAQUISLapack_INCLUDE_DIRS=/apps/castor/intel/mkl/include
COMMON_PLASMA_LIBRARIES="-lplasma -lcoreblas -llapacke -lquark"
COMMON_PLASMA_LIB_DIR="/apps/castor/plasma-2.4.6/lib"
## ambient ##
AMBIENT_BOOST_BINDINGS_INCLUDE=/project/h07/TEST_ALPS/include
AMBIENT_SCALAPACK_LIBRARY="-lmkl_scalapack_lp64 -lmkl_blacs_openmpi_lp64"
AMBIENT_PLASMA_LIBRARY="-lplasma -lcoreblas -llapacke -lquark"
AMBIENT_ENABLE_REGRESSION_PERFORMANCE=ON
AMBIENT_ENABLE_REGRESSION_FUNCTIONAL=ON
## dmrg ##
DMRG_CMAKE_CXX_FLAGS_RELEASE="$COMMON_CMAKE_CXX_FLAGS"
DMRG_ALPS_ROOT_DIR=/project/h07/TEST_ALPS
DMRG_BUILD_REGRESSION=OFF 
DMRG_BUILD_AMBIENT=ON
DMRG_USE_AMBIENT=ON

source $ROOT_DIR/scripts/common/common.sh 
execute $*
