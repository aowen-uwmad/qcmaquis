//
//  HallOfFameToNotDelete.h
//  vli
//
//  Created by Timoth√©e Ewart on 02/05/12.
//  Copyright (c) 2012 IBM. All rights reserved.
//

#ifndef vli_HallOfFameToNotDelete_h
#define vli_HallOfFameToNotDelete_h


                      void mul128_128(unsigned long int* x, unsigned long int const * y){
                          asm( 
                              "movq 8(%%rsi)          ,%%rax    \n" //1
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r15    \n"
                              "movq 0(%%rsi)          ,%%rax    \n" //2
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r14    \n"
                              "addq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq %%r14             ,(%%rdi)  \n"
                              "movq %%r15             ,8(%%rdi) \n"
                             : : :"rax","rbx","rdx","r15","r14","memory" 
                         ); 
                      };
                     
                      void mul192_192(unsigned long int* x, unsigned long int const * y){
                          asm( 
                              "movq 16(%%rsi)         ,%%rax    \n" // 0 
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r15    \n" 
                              "movq 8(%%rsi)          ,%%rax    \n" // 1
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r14    \n"
                              "addq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 0(%%rsi)          ,%%rax    \n" // 2
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r13    \n"
                              "addq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq %%r13             ,0(%%rdi) \n"
                              "movq %%r14             ,8(%%rdi) \n"
                              "movq %%r15             ,16(%%rdi)\n"
                             : : :"rax","rbx","rdx","r15","r14","r13","memory" 
                         ); 
                      };
                     
                      void mul256_256(unsigned long int* x, unsigned long int const * y){
                          asm( 
                              "movq 24(%%rsi)         ,%%rax    \n" // 0 
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r15    \n" 
                              "movq 16(%%rsi)         ,%%rax    \n" // 1
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r14    \n"
                              "addq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 8(%%rsi)          ,%%rax    \n" // 2
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r13    \n"
                              "addq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 0(%%rsi)          ,%%rax    \n" // 3
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r12    \n"
                              "addq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq %%r12             ,0(%%rdi) \n"
                              "movq %%r13             ,8(%%rdi) \n"
                              "movq %%r14             ,16(%%rdi)\n"
                              "movq %%r15             ,24(%%rdi)\n"
                             : : :"rax","rbx","rdx","r15","r14","r13","r12","memory" 
                         ); 
                      };
                     
                      void mul320_320(unsigned long int* x, unsigned long int const * y){
                          asm( 
                              "movq 32(%%rsi)         ,%%rax    \n" // 0 
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r15    \n" 
                              "movq 24(%%rsi)         ,%%rax    \n" // 1
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r14    \n"
                              "addq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 16(%%rsi)         ,%%rax    \n" // 2
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r13    \n"
                              "addq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 8(%%rsi)          ,%%rax    \n" // 3
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r12    \n"
                              "addq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 0(%%rsi)          ,%%rax    \n" // 4
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r11    \n"
                              "addq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq %%r11             ,0(%%rdi) \n"
                              "movq %%r12             ,8(%%rdi) \n"
                              "movq %%r13             ,16(%%rdi)\n"
                              "movq %%r14             ,24(%%rdi)\n"
                              "movq %%r15             ,32(%%rdi)\n"
                             : : :"rax","rbx","rdx","r15","r14","r13","r12","r11","memory" 
                         ); 
                      };
                     
                      void mul384_384(unsigned long int* x, unsigned long int const * y){
                          asm( 
                              "movq 40(%%rsi)         ,%%rax    \n" // 0 
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r15    \n" 
                              "movq 32(%%rsi)         ,%%rax    \n" // 1
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r14    \n"
                              "addq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 24(%%rsi)         ,%%rax    \n" // 2
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r13    \n"
                              "addq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 16(%%rsi)         ,%%rax    \n" // 3
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r12    \n"
                              "addq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 8(%%rsi)          ,%%rax    \n" // 4
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r11    \n"
                              "addq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 0(%%rsi)          ,%%rax    \n" // 5
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r10    \n"
                              "addq %%rdx             ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r11    \n"        
                              "adcq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "mulq 40(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq %%r10             ,0(%%rdi) \n"
                              "movq %%r11             ,8(%%rdi) \n"
                              "movq %%r12             ,16(%%rdi)\n"
                              "movq %%r13             ,24(%%rdi)\n"
                              "movq %%r14             ,32(%%rdi)\n"
                              "movq %%r15             ,40(%%rdi)\n"
                             : : :"rax","rbx","rdx","r15","r14","r13","r12","r11","r10","memory"
                        ); 
                      };
                     
                      void mul448_448(unsigned long int* x, unsigned long int const * y){
                          asm( 
                              "movq 48(%%rsi)         ,%%rax    \n" // 0 
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r15    \n" 
                              "movq 40(%%rsi)         ,%%rax    \n" // 1
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r14    \n"
                              "addq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 32(%%rsi)         ,%%rax    \n" // 2
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r13    \n"
                              "addq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 24(%%rsi)         ,%%rax    \n" // 3
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r12    \n"
                              "addq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 16(%%rsi)         ,%%rax    \n" // 4
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r11    \n"
                              "addq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 8(%%rsi)          ,%%rax    \n" // 5
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r10    \n"
                              "addq %%rdx             ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r11    \n"        
                              "adcq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "mulq 40(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 0(%%rsi)          ,%%rax    \n" // 6
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r9     \n"
                              "addq %%rdx             ,%%r10    \n"        
                              "adcq $0x0              ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r10    \n"        
                              "adcq %%rdx             ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r11    \n"        
                              "adcq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 40(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 48(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq %%r9              ,0(%%rdi) \n"
                              "movq %%r10             ,8(%%rdi) \n"
                              "movq %%r11             ,16(%%rdi)\n"
                              "movq %%r12             ,24(%%rdi)\n"
                              "movq %%r13             ,32(%%rdi)\n"
                              "movq %%r14             ,40(%%rdi)\n"
                              "movq %%r15             ,48(%%rdi)\n"
                             : : :"rax","rbx","rdx","r15","r14","r13","r12","r11","r10","r9","memory"
                        ); 
                      };
                     
                      void mul512_512(unsigned long int* x, unsigned long int const * y){
                          asm( 
                              "movq 56(%%rsi)         ,%%rax    \n" // 0 
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r15    \n" 
                              "movq 48(%%rsi)         ,%%rax    \n" // 1
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r14    \n"
                              "addq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 40(%%rsi)         ,%%rax    \n" // 2
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r13    \n"
                              "addq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 32(%%rsi)         ,%%rax    \n" // 3
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r12    \n"
                              "addq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 24(%%rsi)         ,%%rax    \n" // 4
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r11    \n"
                              "addq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 16(%%rsi)         ,%%rax    \n" // 5
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r10    \n"
                              "addq %%rdx             ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r11    \n"        
                              "adcq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "mulq 40(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 8(%%rsi)          ,%%rax    \n" // 6
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r9     \n"
                              "addq %%rdx             ,%%r10    \n"        
                              "adcq $0x0              ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r10    \n"        
                              "adcq %%rdx             ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r11    \n"        
                              "adcq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 40(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 48(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq 0(%%rsi)          ,%%rax    \n" // 7
                              "movq %%rax             ,%%rbx    \n"
                              "mulq 0(%%rdi)                    \n"
                              "movq %%rax             ,%%r8     \n"
                              "addq %%rdx             ,%%r9     \n"        
                              "adcq $0x0              ,%%r10    \n"        
                              "adcq $0x0              ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 8(%%rdi)                    \n"
                              "addq %%rax             ,%%r9     \n"        
                              "adcq %%rdx             ,%%r10    \n"        
                              "adcq $0x0              ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 16(%%rdi)                   \n"
                              "addq %%rax             ,%%r10    \n"        
                              "adcq %%rdx             ,%%r11    \n"        
                              "adcq $0x0              ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 24(%%rdi)                   \n"
                              "addq %%rax             ,%%r11    \n"        
                              "adcq %%rdx             ,%%r12    \n"        
                              "adcq $0x0              ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 32(%%rdi)                   \n"
                              "addq %%rax             ,%%r12    \n"        
                              "adcq %%rdx             ,%%r13    \n"        
                              "adcq $0x0              ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 40(%%rdi)                   \n"
                              "addq %%rax             ,%%r13    \n"        
                              "adcq %%rdx             ,%%r14    \n"        
                              "adcq $0x0              ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 48(%%rdi)                   \n"
                              "addq %%rax             ,%%r14    \n"        
                              "adcq %%rdx             ,%%r15    \n"        
                              "movq %%rbx             ,%%rax    \n"
                              "mulq 56(%%rdi)                   \n"
                              "addq %%rax             ,%%r15    \n"        
                              "movq %%r8              ,0(%%rdi) \n"
                              "movq %%r9              ,8(%%rdi) \n"
                              "movq %%r10             ,16(%%rdi)\n"
                              "movq %%r11             ,24(%%rdi)\n"
                              "movq %%r12             ,32(%%rdi)\n"
                              "movq %%r13             ,40(%%rdi)\n"
                              "movq %%r14             ,48(%%rdi)\n"
                              "movq %%r15             ,56(%%rdi)\n"
                             : : :"rax","rbx","rdx","r15","r14","r13","r12","r11","r10","r9","r8","memory"
                        ); 
                      };




#endif
